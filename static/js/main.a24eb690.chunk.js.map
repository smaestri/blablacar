{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","trips","setTrips","currentTrips","setCurrentTrips","pageCount","setPagecount","useEffect","console","log","axios","get","then","response","data","tripsWithIndex","map","trip","index","slice","Math","ceil","length","catch","error","alert","className","scope","waypoints","place","city","price","amount","currency","id","marginPagesDisplayed","pageRangeDisplayed","onPageChange","props","beginIndex","selected","breakClassName","breakLinkClassName","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","activeClassName","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAwFeA,MAhFf,WAEE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwCF,mBAAS,IAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAAkCJ,mBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KAuBA,OArBAC,qBAAU,WACRC,QAAQC,IAAI,aACZC,IAAMC,IAXE,iQAWOC,MAAK,SAAAC,GAClB,IAAMZ,EAAQY,EAASC,KAAKb,MACtBc,EAAiBd,EAAMe,KAAI,SAACC,EAAMC,GAAP,mBAAC,eAAsBD,GAAvB,IAA6BC,MAAOA,EAAQ,OAC7EhB,EAASa,GACTX,EAAgBW,EAAeI,MAAM,EAdpB,KAejBb,EAAac,KAAKC,KAAKpB,EAAMqB,OAfZ,QAiBhBC,OAAM,SAACC,GACNC,MAAM,cAGT,IASD,sBAAKC,UAAU,YAAf,UAEE,0DAEA,wBAAOA,UAAU,QAAjB,UAAyB,gCAAO,+BAAI,oBAAIC,MAAM,MAAV,iBAAwB,oBAAIA,MAAM,MAAV,kBAAyB,oBAAIA,MAAM,MAAV,gBAAuB,oBAAIA,MAAM,MAAV,wBACzGxB,EAAaa,KAAI,SAACC,GAAD,OAChB,gCACA,+BACE,oBAAIU,MAAM,MAAV,SAAiBV,EAAKC,QACtB,6BAAKD,EAAKW,UAAU,GAAGC,MAAMC,OAC7B,6BAAKb,EAAKW,UAAU,GAAGC,MAAMC,OAC7B,uCAAQb,EAAKc,MAAMC,OAAnB,YAA6Bf,EAAKc,MAAME,uBAK9C,qBAAKC,GAAG,iBAAR,SACE,cAAC,IAAD,CACE7B,UAAWA,EACX8B,qBAAsB,EACtBC,mBAlDa,GAmDbC,aA3BgB,SAACC,GACvB,IAAMC,EAzBa,GAyBAD,EAAME,SACzBpC,EAAgBH,EAAMkB,MAAMoB,EAAYA,EA1BrB,MAoDbE,eAAgB,YAChBC,mBAAoB,YACpBC,mBAAoB,oCACpBC,cAAe,YACfC,kBAAmB,YACnBC,kBAAmB,YACnBC,sBAAuB,YACvBC,cAAe,YACfC,kBAAmB,YACnBC,gBAAiB,iBCvDZC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzC,MAAK,YAAkD,IAA/C0C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a24eb690.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport ReactPaginate from 'react-paginate';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst URL = \"https://public-api.blablacar.com/api/v3/trips?key=YzbiA8L6DcqxTvSna1lOFQQU66FosDVs&from_coordinate=48.8566%2C2.3522&to_coordinate=45.764043%2C4.835659&from_country=FR&to_country=FR&locale=fr-FR&start_date_local=2021-10-10T00:00:00&currency=EUR&count=100\";\nconst ITEMS_PER_PAGE = 10;\n\nfunction App() {\n\n  const [trips, setTrips] = useState([])\n  const [currentTrips, setCurrentTrips] = useState([])\n  const [pageCount, setPagecount] = useState(0)\n\n  useEffect(() => {\n    console.log('useeffect')\n    axios.get(URL).then(response => {\n      const trips = response.data.trips;\n      const tripsWithIndex = trips.map((trip, index) => ({ ...trip, index: index + 1 }));\n      setTrips(tripsWithIndex);\n      setCurrentTrips(tripsWithIndex.slice(0, ITEMS_PER_PAGE))\n      setPagecount(Math.ceil(trips.length / ITEMS_PER_PAGE))\n    })\n      .catch((error) => {\n        alert('error')\n      })\n\n  }, [])\n\n\n  const handlePageClick = (props) => {\n    const beginIndex = props.selected * ITEMS_PER_PAGE;\n    setCurrentTrips(trips.slice(beginIndex, beginIndex + ITEMS_PER_PAGE))\n  }\n\n  return (\n    <div className=\"container\">\n\n      <h1>Trips from Paris to Lyon</h1>\n\n      <table className=\"table\"><thead><tr><th scope=\"col\">Num</th><th scope=\"col\">From</th><th scope=\"col\">To</th><th scope=\"col\">Price</th></tr></thead>\n        {currentTrips.map((trip) => (\n          <tbody>\n          <tr>\n            <th scope=\"row\">{trip.index}</th>\n            <td>{trip.waypoints[0].place.city}</td>\n            <td>{trip.waypoints[1].place.city}</td>\n            <td>{`${trip.price.amount} ${trip.price.currency}`}</td>\n          </tr>\n          </tbody>\n        ))}\n      </table>\n      <div id=\"react-paginate\">\n        <ReactPaginate\n          pageCount={pageCount}\n          marginPagesDisplayed={1}\n          pageRangeDisplayed={ITEMS_PER_PAGE}\n          onPageChange={handlePageClick}\n          breakClassName={'page-item'}\n          breakLinkClassName={'page-link'}\n          containerClassName={'pagination justify-content-center'}\n          pageClassName={'page-item'}\n          pageLinkClassName={'page-link'}\n          previousClassName={'page-item'}\n          previousLinkClassName={'page-link'}\n          nextClassName={'page-item'}\n          nextLinkClassName={'page-link'}\n          activeClassName={'active'}\n        />\n      </div>\n      {/* <div>\n        DEBUG\n        <table border=\"1\"><tr style={{ fontWeight: 'bold' }}><td>Num</td><td>From</td><td>To</td><td>Price</td></tr>\n          {trips.map((trip, index) => (\n            <tr>\n              <td>{index + 1}</td>\n              <td>{trip.waypoints[0].place.city}</td>\n              <td>{trip.waypoints[1].place.city}</td>\n              <td>{`${trip.price.amount} ${trip.price.currency}`}</td>\n\n            </tr>\n          ))}\n        </table>\n      </div> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}